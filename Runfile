require_relative 'app/boot'

title   "Sector Seven"
summary "Generate sector-seven.net"
version "0.1.0"

usage  "(b|build) [-HCJSA]"
help   "Generate the site or parts of it"
option "--html, -H", "Build HTML only"
option "--css, -C", "Build CSS only"
option "--assets, -A", "Copy assets only"
option "--software, -S", "Copy software only"
option "--js, -J", "Build javascripts only"
action :b, :build do |args|
  all = !(args['--html'] or args['--css'] or args['--assets'] or args['--js'] or args['--software'])
  generator.build_html if all or args['--html']
  generator.build_css if all or args['--css']
  generator.build_assets if all or args['--assets']
  generator.build_software if all or args['--software']
  generator.build_js if all or args['--js']
  generator.build_repo_assets if all
end

help   "Watch and build"
action :w, :watch do
  say "watching..."
  generator.watch 'src' do |events|
    flags = {}
    events.each do |filename, event|
      say "file: g`#{File.basename filename}`, event: b`#{event}`"
      ext = File.extname(filename)[1..-1]
    
      flag = case ext
      when 'slim', 'md', 'yml' then '--html'
      when 'scss'              then '--css'
      when 'coffee'            then '--js'
      else                          '--assets'
      end

      flags[flag] = true
    end

    flags = flags.keys.join ' '
    system "run build #{flags}"
  end
end

help   "Start development server"
action :s, :server do
  exec "rackup -p 3000 -o 0.0.0.0"
end

help   "Deploy site by committing and pushing the site folder"
action :d, :deploy do
  say "deploying"
  Dir.chdir 'site' do
    system "git add . --all && git commit -am 'automatic deploy' && git push"
  end
end

helpers do
  def generator = @generator ||= Generator.new
end